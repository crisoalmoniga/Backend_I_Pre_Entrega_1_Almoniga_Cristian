<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos en Tiempo Real</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h1>Lista de Productos en Tiempo Real</h1>
    <ul id="productList">
        {{#each products}}
            <li id="product-{{this._id}}"><strong>{{this.title}}</strong>: {{this.price}} USD</li>
        {{/each}}
    </ul>

    <script>
        const socket = io();

        // Verificar conexiÃ³n con el servidor WebSocket
        socket.on('connect', () => {
            console.log('Conectado al servidor WebSocket');
        });

        // Escucha el evento 'updateProducts' para actualizar la lista de productos
        socket.on('updateProducts', (products) => {
            console.log(' Productos actualizados:', products);
            const productList = document.getElementById('productList');
            productList.innerHTML = ''; // Limpiar la lista

            if (!products || products.length === 0) {
                const emptyMessage = document.createElement('li');
                emptyMessage.textContent = 'No hay productos disponibles.';
                productList.appendChild(emptyMessage);
            } else {
                products.forEach(product => {
                    console.log(' Producto recibido:', product);
                    const newProduct = document.createElement('li');
                    newProduct.id = `product-${product._id}`;
                    newProduct.innerHTML = `<strong>${product.title}</strong>: ${product.price} USD`;
                    productList.appendChild(newProduct);
                });
            }
        });

        // Verificar cuando el cliente se desconecta
        socket.on('disconnect', () => {
            console.log('Desconectado del servidor WebSocket');
        });
    </script>
</body>
</html>